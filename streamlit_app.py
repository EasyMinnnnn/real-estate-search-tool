import os
import math
import time
import requests
import streamlit as st
from search_google import search_google

# ========= ƒê·∫£m b·∫£o Playwright Chromium c√≥ s·∫µn (c√†i 1 l·∫ßn) =========
try:
    if "_pw_ready" not in st.session_state:
        import subprocess, sys
        # ch·ªâ c√†i n·∫øu kh√¥ng b·ªã t·∫Øt Playwright
        if os.getenv("USE_PLAYWRIGHT", "1") != "0":
            subprocess.run(
                [sys.executable, "-m", "playwright", "install", "chromium", "--with-deps"],
                check=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
            )
        st.session_state._pw_ready = True
except Exception as e:
    st.warning(f"Kh√¥ng c√†i ƒë∆∞·ª£c Playwright Chromium (s·∫Ω d√πng requests/cache n·∫øu c·∫ßn): {e}")

# ========= Load secrets -> env (n·∫øu c√≥) =========
for k in ("GOOGLE_API_KEY", "GOOGLE_CX", "PLAYWRIGHT_HEADLESS", "USE_PLAYWRIGHT"):
    try:
        if k in st.secrets and st.secrets[k]:
            os.environ[k] = str(st.secrets[k])
    except Exception:
        pass

# --- c·∫•u h√¨nh ---
BATCH_SIZE = 10
MAX_BATCHES = 3          # t·ªëi ƒëa 30 tin
TARGET_TOTAL = BATCH_SIZE * MAX_BATCHES

st.set_page_config(page_title="Tra c·ª©u BƒêS (Streamlit)", layout="wide")
st.title("üîé Tra c·ª©u b·∫•t ƒë·ªông s·∫£n (Streamlit)")

# --- Sidebar: c·∫•u h√¨nh & ch·∫©n ƒëo√°n ---
with st.sidebar:
    st.header("C·∫•u h√¨nh")

    api = st.text_input(
        "GOOGLE_API_KEY", os.getenv("GOOGLE_API_KEY") or "", type="password"
    )
    cx = st.text_input("GOOGLE_CX", os.getenv("GOOGLE_CX") or "")

    # Ghi l·∫°i v√†o env ƒë·ªÉ search_google ƒë·ªçc m·ªói l·∫ßn
    if api:
        os.environ["GOOGLE_API_KEY"] = api
    if cx:
        os.environ["GOOGLE_CX"] = cx

    st.caption("Playwright ch·∫°y headless (ƒë·ªïi sang 0 ƒë·ªÉ debug giao di·ªán Chromium).")
    headless = st.checkbox("HEADLESS", value=(os.getenv("PLAYWRIGHT_HEADLESS", "1") == "1"))
    os.environ["PLAYWRIGHT_HEADLESS"] = "1" if headless else "0"

    disable_pw = st.checkbox(
        "Disable Playwright (ch·ªâ d√πng requests)",
        value=(os.getenv("USE_PLAYWRIGHT", "1") == "0"),
        help="B·∫≠t n·∫øu Playwright l·ªói tr√™n cloud; crawler s·∫Ω d√πng requests + Google Cache fallback."
    )
    os.environ["USE_PLAYWRIGHT"] = "0" if disable_pw else "1"

    st.divider()
    # Ch·∫©n ƒëo√°n Google API nhanh
    if st.button("Test Google API"):
        params = {
            "key": os.getenv("GOOGLE_API_KEY", ""),
            "cx": os.getenv("GOOGLE_CX", ""),
            "q": "test",
            "num": 3,
            "hl": "vi",
        }
        try:
            r = requests.get("https://www.googleapis.com/customsearch/v1", params=params, timeout=15)
            st.write("HTTP:", r.status_code)
            st.json(r.json())
        except Exception as e:
            st.error(f"L·ªói g·ªçi Google API: {e}")

    st.caption(f"API key loaded: {'GOOGLE_API_KEY' in os.environ}")
    st.caption(f"CX loaded: {'GOOGLE_CX' in os.environ}")

# --- Kh·ªüi t·∫°o state ---
if "query" not in st.session_state:
    st.session_state.query = ""
if "results" not in st.session_state:
    st.session_state.results = []
if "batch" not in st.session_state:
    st.session_state.batch = 0

# --- Form t√¨m ki·∫øm ---
with st.form("search_form", clear_on_submit=False):
    q = st.text_input("Nh·∫≠p t·ª´ kho√°", st.session_state.query or "B√°n nh√† Qu·∫≠n 3, H·ªì Ch√≠ Minh")
    submitted = st.form_submit_button("T√¨m ki·∫øm")
    if submitted:
        if not api or not cx:
            st.error("Thi·∫øu GOOGLE_API_KEY ho·∫∑c GOOGLE_CX.")
        else:
            st.session_state.query = q.strip()
            st.session_state.batch = 1
            with st.spinner("ƒêang t√¨m ki·∫øm v√† gom link‚Ä¶"):
                try:
                    # l·∫•y s·∫µn t·ªëi ƒëa 30 tin (ƒë·ªÉ b·∫•m tƒÉng d·∫ßn m·ªói l·∫ßn 10)
                    res = search_google(st.session_state.query, target_total=TARGET_TOTAL)
                except TypeError:
                    # fallback n·∫øu h√†m c≈© kh√¥ng c√≥ tham s·ªë target_total
                    res = search_google(st.session_state.query)
                except Exception as e:
                    st.error(f"L·ªói khi g·ªçi search_google: {e}")
                    res = []
            st.session_state.results = res or []

# --- Hi·ªÉn th·ªã k·∫øt qu·∫£ ---
if st.session_state.query:
    st.subheader(f"K·∫øt qu·∫£ cho: {st.session_state.query}")
    total = len(st.session_state.results)
    show_n = min(st.session_state.batch * BATCH_SIZE, total)
    has_more = (st.session_state.batch < MAX_BATCHES) and (show_n < total)

    # d·∫°ng l∆∞·ªõi 3 c·ªôt
    cols_per_row = 3
    rows = math.ceil(show_n / cols_per_row)
    idx = 0
    for _ in range(rows):
        cols = st.columns(cols_per_row)
        for c in cols:
            if idx >= show_n:
                break
            item = st.session_state.results[idx]
            with c:
                if item.get("image"):
                    st.image(item["image"], use_container_width=True)
                st.markdown(f"**{item.get('title','')}**")
                st.write(f"**Gi√°:** {item.get('price','')}")
                st.write(f"**Di·ªán t√≠ch:** {item.get('area','')}")
                if item.get("description"):
                    desc = item["description"]
                    if len(desc) > 240:
                        desc = desc[:240].rstrip() + "‚Ä¶"
                    st.write(desc)
                st.write(f"**Li√™n h·ªá:** {item.get('contact','')}")
                # Nh√£n debug ngu·ªìn d·ªØ li·ªáu
                if item.get("_source"):
                    st.caption(f"source: {item['_source']}")
                if item.get("link"):
                    st.link_button("üîó Xem chi ti·∫øt", item["link"])
            idx += 1

    st.caption(f"ƒêang hi·ªÉn th·ªã {show_n}/{total} tin.")

    # N√∫t Crawl th√™m
    c1, c2 = st.columns([1, 3])
    with c1:
        if has_more and st.button("Crawl th√™m 10 tin"):
            st.session_state.batch += 1
            time.sleep(0.1)
            st.rerun()

    # L√†m m·ªõi
    with c2:
        if st.button("L√†m m·ªõi"):
            st.session_state.batch = 0
            st.session_state.results = []
            st.session_state.query = ""
            st.rerun()

    # G·ª£i √Ω n·∫øu kh√¥ng c√≥ k·∫øt qu·∫£
    if total == 0:
        st.info(
            "Kh√¥ng c√≥ k·∫øt qu·∫£. Ki·ªÉm tra l·∫°i CSE (Search the entire web), quota Custom Search JSON API, "
            "ho·∫∑c th·ª≠ truy v·∫•n h·∫πp h∆°n: `site:batdongsan.com.vn \"B√°n nh√† Qu·∫≠n 3\"`."
        )
